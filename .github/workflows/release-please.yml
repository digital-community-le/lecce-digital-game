name: Release Please

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'replit.md'
      - '**/*.md'
      - '.gitignore'
      - 'components.json'
      - 'tsconfig.check.json'

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  # Pre-validation veloce per commit che potrebbero creare release
  pre-validation:
    if: |
      contains(github.event.head_commit.message, 'feat:') || 
      contains(github.event.head_commit.message, 'fix:') || 
      contains(github.event.head_commit.message, 'BREAKING CHANGE:')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      validation_passed: ${{ steps.validation.outputs.passed }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Quick validation before release
        id: validation
        run: |
          npm run check
          npm run test:smart
          echo "passed=true" >> $GITHUB_OUTPUT

  # Release Please - Solo creazione/aggiornamento PR
  release-please:
    needs: [pre-validation]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      pr_created: ${{ steps.release.outputs.pr_created }}
      pr_number: ${{ steps.release.outputs.pr_number }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      html_url: ${{ steps.release.outputs.html_url }}
      pre_validation_passed: ${{ needs.pre-validation.outputs.validation_passed == 'true' }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on created PR with validation status
        if: steps.release.outputs.pr_created == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.release.outputs.pr_number }};
            const validationPassed = ${{ needs.pre-validation.outputs.validation_passed == 'true' }};

            const comment = validationPassed 
              ? `✅ **Pre-validation passed** - This PR is ready for auto-merge
                 
                 📋 **Validation Results:**
                 - ✅ TypeScript check passed
                 - ✅ Smart tests passed
                 - 🤖 Auto-merge will proceed when this PR is ready
                 
                 Once merged, deployment will start automatically.`
              : `⚠️ **Pre-validation failed** - Auto-merge blocked
                 
                 📋 **Validation Results:**
                 - ❌ Pre-validation tests failed
                 - 🚫 Auto-merge is blocked
                 
                 **Action Required:**
                 1. Check the pre-validation job logs
                 2. Fix any failing tests  
                 3. Push fixes to trigger re-validation
                 4. Manual review and merge when ready`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });

  # Deploy immediato se release è già stata creata (caso edge)
  deploy-if-release-created:
    needs: [release-please]
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check prerequisites
        run: npm run check:prerequisites

      - name: Run type checking
        run: npm run check

      - name: Run complete test suite (ALL tests for production deploy)
        run: npm run test:run

      - name: Generate comprehensive coverage report
        run: npm run test:coverage

      - name: Build application with version
        run: npm run build:prod

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LECCE_DIGITAL_LEGENDS }}'
          channelId: live
          projectId: lecce-digital-legends

      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ needs.release-please.outputs.tag_name }}';
            const version = '${{ needs.release-please.outputs.version }}';
            const releaseUrl = '${{ needs.release-please.outputs.html_url }}';
            const deployUrl = 'https://lecce-digital-legends.web.app';

            const deploymentInfo = `🚀 **Release ${tag} Deployed Successfully!**

            ## 📦 Deployment Details
            - **Live Application**: [${deployUrl}](${deployUrl})
            - **Release Tag**: [\`${tag}\`](${releaseUrl})
            - **Version**: \`${version}\`
            - **Deployed At**: ${new Date().toISOString()}
            - **Commit SHA**: \`${context.sha.substring(0, 7)}\`

            ## 🎯 Release Information  
            - **GitHub Release**: [View Release Notes](${releaseUrl})
            - **Changelog**: Updated automatically with conventional commits
            - **Tag Created**: ✅ \`${tag}\` available in repository

            ## 🎉 Status
            ✅ **All systems operational** - Release is live and available to users!

            ---
            *Automated deployment completed via Release workflow*`;

            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: deploymentInfo
            });
