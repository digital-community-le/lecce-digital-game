# Leggi il messaggio del commit
commit_regex='^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,50}'

if ! grep -qE "$commit_regex" "$1"; then
    echo ""
    echo "🚫 COMMIT MESSAGE FORMAT ERROR!"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo ""
    echo "❌ Your commit message does not follow the required format."
    echo ""
    echo "📝 REQUIRED FORMAT:"
    echo "   type(scope): description"
    echo ""
    echo "🏷️  ALLOWED TYPES:"
    echo "   • feat     - A new feature"
    echo "   • fix      - A bug fix"
    echo "   • docs     - Documentation changes"
    echo "   • style    - Code style changes (formatting, etc.)"
    echo "   • refactor - Code refactoring"
    echo "   • test     - Adding or updating tests"
    echo "   • chore    - Maintenance tasks"
    echo ""
    echo "✅ VALID EXAMPLES:"
    echo "   feat(auth): add login functionality"
    echo "   fix: resolve navigation bug in sidebar"
    echo "   docs: update API documentation"
    echo "   refactor(ui): simplify button component"
    echo "   test: add unit tests for user service"
    echo "   chore: update dependencies"
    echo ""
    echo "📏 RULES:"
    echo "   • Description must be 1-50 characters"
    echo "   • Use lowercase for type and description"
    echo "   • Scope is optional but recommended"
    echo ""
    echo "🔄 TO FIX: Edit your commit message and try again"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo ""
    exit 1
fi

echo "✅ Commit message format is valid!"
